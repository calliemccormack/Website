getwd()
install.packages("blogdown")
#run to install hugo; wait until finished
blogdown::install_hugo()
blogdown::new_site(theme="nurlansu/hugo-sustain")
blogdown:::new_post_addin()
blogdown:: serve_site()
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) >n )) x = strwrap(x, width =n )
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
class_diag<-function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
library(lmtest)
library(sandwich)
library(plotROC)
library(glmnet)
library(kableExtra)
for(i in 1:6){print(as.character(covmats$age[i])); print(covmats$covs[i])} %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
covmats <- Suicide%>% group_by(age) %>% do(covs=cov(.[5:6]))
Suicide <- read.csv("who_suicide_statistics.csv")
Suicide<- Suicide %>% drop_na()
'%!in%' <- function(x,y)!('%in%'(x,y))
Suicide$year <- as.factor(Suicide$year)
set.seed(1234)
Suicidedata <- Suicide%>%mutate(y=ifelse(sex=="female", 1, 0))
covmats <- Suicide%>% group_by(age) %>% do(covs=cov(.[5:6]))
for(i in 1:6){print(as.character(covmats$age[i])); print(covmats$covs[i])} %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
for(i in 1:6){print(as.character(covmats$age[i])); print(covmats$covs[i])} %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
summary.aov(man) %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
man <- manova(cbind(suicides_no, population)~age, data=Suicide)
summary(man)
summary.aov(man) %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
summary.aov(man)
pairwise.t.test(Suicide$suicides_no, Suicide$age, p.adj="none") %>% kable %>% kable_styling(bootstrap_options = c("striped", "hover"))
summary.aov(man) %>% kable_as_xml()
summary.aov(man) %>% kable
variables<-str_remove(variables, "age")
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) >n )) x = strwrap(x, width =n )
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
class_diag<-function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
library(lmtest)
library(sandwich)
library(plotROC)
library(glmnet)
library(kableExtra)
Suicide <- read.csv("who_suicide_statistics.csv")
Suicide<- Suicide %>% drop_na()
'%!in%' <- function(x,y)!('%in%'(x,y))
Suicide$year <- as.factor(Suicide$year)
set.seed(1234)
Suicidedata <- Suicide%>%mutate(y=ifelse(sex=="female", 1, 0))
#Manova
covmats <- Suicide%>% group_by(age) %>% do(covs=cov(.[5:6]))
for(i in 1:6){print(as.character(covmats$age[i])); print(covmats$covs[i])}
man <- manova(cbind(suicides_no, population)~age, data=Suicide)
summary(man)
summary.aov(man)
pairwise.t.test(Suicide$suicides_no, Suicide$age, p.adj="none")
pairwise.t.test(Suicide$population,Suicide$age, p.adj="none")
1 - (.95)^33
.05/33
Suicide%>%group_by(sex)%>%
summarize(means=mean(suicides_no))%>%
summarize(`mean_diff:`=diff(means))
rand_dist <- vector()
for(i in 1:5000){
new <- data.frame(Suicides=sample(Suicide$suicides_no), Sex=Suicide$sex)
rand_dist[i]<-mean(new[new$Sex=="female",]$Suicides)-
mean(new[new$Sex=="male",]$Suicides)}
{hist(rand_dist,main="",ylab=""); abline(v=233.493,col="red")}
mean(rand_dist> 233.493 | rand_dist< -233.493)
#Linear Regression Model
Suicidedata$population_c <- Suicide$population- mean(Suicide$population)
Suicidedata$suicides_no_c <- Suicide$suicides_no - mean(Suicide$suicides_no)
fit <- lm(suicides_no_c ~ population_c+sex+sex:population_c, data=Suicidedata)
summary(fit)
Suicidedata %>% ggplot() + geom_point(aes(x=population_c, y=suicides_no_c, color=sex),
alpha=.2) +  geom_smooth(method = "lm", se = FALSE, aes(x=population_c,
y=suicides_no_c, color=sex))
resids <- fit$residuals
ks.test(resids, "pnorm",mean=0, sd(resids))
bptest(fit)
coeftest(fit, vcov = vcovHC(fit))
#Boostraped Standard Errors
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(Suicidedata, replace=T)
fit <- lm(suicides_no_c~population_c+sex+sex:population_c,
data=boot_dat)
coef(fit) })
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
#Logistic Regression
logisticfit <- glm(y~population_c+suicides_no_c,data=Suicidedata, family="binomial")
coeftest(logisticfit)
exp(coeftest(logisticfit))
probs <- predict(logisticfit, type = "response")
table(predict=as.numeric(probs>.5), truth=Suicidedata$y) %>% addmargins()
class_diag(probs, Suicidedata$y)
Suicidedata$logit <-predict(logisticfit, type="link")
ggplot(Suicidedata,aes(logit, color=sex, fill=sex))+geom_density(alpha=.3)+
geom_vline(xintercept=0,lty=2)+xlim(-.1,.1) + geom_rug()
ROCplot<-ggplot(Suicidedata) + geom_roc(aes(d=y, m=probs), n.cuts=0)
ROCplot
calc_auc(ROCplot)
k=10
data1 <- Suicidedata %>% sample_frac()
folds <- ntile(1:nrow(data1), n=10)
diags<-NULL
for(i in 1:k){
train <- data1[folds!=i,]
test <- data1[folds==i,]
truth <- test$y
fit <- glm(y~ population+suicides_no, data=train, family="binomial")
probs <- predict(fit, newdata=test, type="response")
diags<-rbind(diags,class_diag(probs,truth))
}
summarize_all(diags, mean)
y <- as.matrix(Suicide$sex)
x <- model.matrix(sex~-1+., data=Suicide, na.action=na.omit)
cv <- cv.glmnet(x,y, family="binomial")
lasso <- glmnet(x,y, family = "binomial", lambda = cv$lambda.1se)
c<-coef(lasso)
inds<-which(c!=0)
variables<-row.names(c)[inds]
variables<-variables[variables %!in% '(Intercept)']
variables<-str_remove(variables, "country")
variables<-str_remove(variables, "age")
variables
Suicidewide<-Suicide%>% pivot_wider(names_from = country, values_from = country,
values_fill = list(country=0),
values_fn = list(country = ~+(as.logical(length(.))))) %>% pivot_wider(names_from= age, values_from = age, values_fill = list(age=0),values_fn = list(country = ~+(as.logical(length(.)))))
Suicidewide<-Suicide%>% pivot_wider(names_from = country, values_from = country,
values_fill = list(country=0),
values_fn = list(country = ~+(as.logical(length(.))))) %>% pivot_wider(names_from= age, values_from = age, values_fill = list(age=0),values_fn = list(age = ~+(as.logical(length(.)))))
View(Suicidewide)
Suicidewide<-Suicide%>% pivot_wider(names_from = country, values_from = country,
values_fill = list(country=0),
values_fn = list(country = ~+(as.logical(length(.))))) %>% pivot_wider(names_from= age, values_from = age, values_fill = list(age=0),values_fn = list(age = ~+(as.logical(length(.))))) %>% select(one_of(variables), age, population, suicides_no,sex)
Suicidewide<-Suicide%>% pivot_wider(names_from = country, values_from = country,
values_fill = list(country=0),
values_fn = list(country = ~+(as.logical(length(.))))) %>% pivot_wider(names_from= age, values_from = age, values_fill = list(age=0),values_fn = list(age = ~+(as.logical(length(.))))) %>% select(one_of(variables), population, suicides_no,sex)
View(Suicidewide)
k=10
suicidedat <- Suicidewide[sample(nrow(Suicidewide)),]
folds<-cut(seq(1:nrow(Suicidewide)),breaks=k,labels=F)
diags <- NULL
for(i in 1:k){
train<-suicidedat[folds!=i,]
test <- suicidedat[folds==i,]
truth <-test$sex
fit <- glm(sex~., data=train, family = "binomial")
probs <- predict(fit, newdata = test, type="response")
diags <- rbind(diags, class_diag(probs, truth))
}
diags %>% summarize_all(mean)
blogdown:: serve_site()
data("HairEyeColor")
force(HairEyeColor)
data("iris")
library(tidyverse)
ggplot(aes(py$x, py$y)) + geom_point(aes())
library(tidyverse)
ggplot() + geom_point(aes(py$x, py$y))
blogdown:::insert_image_addin()
blogdown:: serve_site()
blogdown:: serve_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("C:\Users\calla\OneDrive\Documents\Comp Bio\Website\static\Resume.pdf")
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:: serve_site()
knitr::include_graphics("/./About_files/resume.pdf")
knitr::include_graphics("./About_files/resume.pdf")
blogdown:: serve_site
blogdown:: serve_site()
blogdown:: serve_site()
